$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  1 z clk $end
  $var wire  1 { reset $end
  $scope module top $end
   $var wire 32 1 addr_load [31:0] $end
   $var wire 32 1 addr_store [31:0] $end
   $var wire  4 ' alu_cnt [3:0] $end
   $var wire  1 7 auipc $end
   $var wire  1 6 br_taken $end
   $var wire  1 z clk $end
   $var wire  3 ) csr_cnt [2:0] $end
   $var wire 32 5 csr_data [31:0] $end
   $var wire 12 4 csr_imm [11:0] $end
   $var wire 32 2 data_load [31:0] $end
   $var wire 32 / data_store [31:0] $end
   $var wire  1 9 ebreak $end
   $var wire 32 # ifu_pc [31:0] $end
   $var wire 32 3 imm [31:0] $end
   $var wire  6 ( ins_cnt [5:0] $end
   $var wire 32 $ inst [31:0] $end
   $var wire  1 < jal $end
   $var wire  1 ; jalr $end
   $var wire  1 : load $end
   $var wire  4 % lsu_cnt [3:0] $end
   $var wire  1 8 lui $end
   $var wire  1 & mem_cnt $end
   $var wire  4 * pc_cnt [3:0] $end
   $var wire  5 + raddr1 [4:0] $end
   $var wire  5 , raddr2 [4:0] $end
   $var wire 32 . rdata1 [31:0] $end
   $var wire 32 / rdata2 [31:0] $end
   $var wire  1 { reset $end
   $var wire  5 - waddr [4:0] $end
   $var wire 32 0 wdata [31:0] $end
   $scope module csr_t0 $end
    $var wire  1 z clk $end
    $var wire  3 ) csr_cnt [2:0] $end
    $var wire 12 4 csr_imm [11:0] $end
    $var wire 32 @ mcause [31:0] $end
    $var wire 32 > mepc [31:0] $end
    $var wire 32 ? mstatus [31:0] $end
    $var wire 32 = mtvec [31:0] $end
    $var wire 32 # pc_in [31:0] $end
    $var wire 32 5 rdata [31:0] $end
    $var wire  1 { reset $end
    $var wire 32 A temp [31:0] $end
    $var wire 32 . wdata [31:0] $end
   $upscope $end
   $scope module exu_t0 $end
    $var wire  1 C BType $end
    $var wire  1 D IType $end
    $var wire  1 < JType $end
    $var wire  1 F RType $end
    $var wire  1 E SType $end
    $var wire  1 B UType $end
    $var wire 32 G alu_a [31:0] $end
    $var wire 32 H alu_b [31:0] $end
    $var wire  4 ' alu_cnt [3:0] $end
    $var wire 32 0 alu_result [31:0] $end
    $var wire  1 7 auipc $end
    $var wire  1 6 br_taken $end
    $var wire  3 ) csr_cnt [2:0] $end
    $var wire 32 5 csr_data [31:0] $end
    $var wire 32 2 data_load [31:0] $end
    $var wire 32 3 imm [31:0] $end
    $var wire  6 ( ins_cnt [5:0] $end
    $var wire  1 < jal $end
    $var wire  1 ; jalr $end
    $var wire  1 : load $end
    $var wire  1 8 lui $end
    $var wire  4 * pc_cnt [3:0] $end
    $var wire 32 # pc_in [31:0] $end
    $var wire 32 . rdata1 [31:0] $end
    $var wire 32 / rdata2 [31:0] $end
    $var wire 64 I shift_temp [63:0] $end
   $upscope $end
   $scope module gpr_t0 $end
    $var wire  1 z clk $end
    $var wire  1 9 ebreak $end
    $var wire  1 & mem_cnt $end
    $var wire 32 # pc_in [31:0] $end
    $var wire  5 + raddr1 [4:0] $end
    $var wire  5 , raddr2 [4:0] $end
    $var wire 32 . rdata1 [31:0] $end
    $var wire 32 / rdata2 [31:0] $end
    $var wire  1 { reset $end
    $var wire 32 K rf[0] [31:0] $end
    $var wire 32 U rf[10] [31:0] $end
    $var wire 32 V rf[11] [31:0] $end
    $var wire 32 W rf[12] [31:0] $end
    $var wire 32 X rf[13] [31:0] $end
    $var wire 32 Y rf[14] [31:0] $end
    $var wire 32 Z rf[15] [31:0] $end
    $var wire 32 [ rf[16] [31:0] $end
    $var wire 32 \ rf[17] [31:0] $end
    $var wire 32 ] rf[18] [31:0] $end
    $var wire 32 ^ rf[19] [31:0] $end
    $var wire 32 L rf[1] [31:0] $end
    $var wire 32 _ rf[20] [31:0] $end
    $var wire 32 ` rf[21] [31:0] $end
    $var wire 32 a rf[22] [31:0] $end
    $var wire 32 b rf[23] [31:0] $end
    $var wire 32 c rf[24] [31:0] $end
    $var wire 32 d rf[25] [31:0] $end
    $var wire 32 e rf[26] [31:0] $end
    $var wire 32 f rf[27] [31:0] $end
    $var wire 32 g rf[28] [31:0] $end
    $var wire 32 h rf[29] [31:0] $end
    $var wire 32 M rf[2] [31:0] $end
    $var wire 32 i rf[30] [31:0] $end
    $var wire 32 j rf[31] [31:0] $end
    $var wire 32 N rf[3] [31:0] $end
    $var wire 32 O rf[4] [31:0] $end
    $var wire 32 P rf[5] [31:0] $end
    $var wire 32 Q rf[6] [31:0] $end
    $var wire 32 R rf[7] [31:0] $end
    $var wire 32 S rf[8] [31:0] $end
    $var wire 32 T rf[9] [31:0] $end
    $var wire  5 - waddr [4:0] $end
    $var wire 32 0 wdata [31:0] $end
    $var wire  1 & wen $end
    $scope module unnamedblk1 $end
     $var wire 32 k i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module idu_t0 $end
    $var wire  1 C BType $end
    $var wire  1 D IType $end
    $var wire  1 p I_imm $end
    $var wire  1 o IcsrType $end
    $var wire  1 < JType $end
    $var wire  1 F RType $end
    $var wire  1 E SType $end
    $var wire  1 B UType $end
    $var wire  4 ' alu_cnt [3:0] $end
    $var wire  1 7 auipc $end
    $var wire  3 ) csr_cnt [2:0] $end
    $var wire 12 4 csr_imm [11:0] $end
    $var wire  1 9 ebreak $end
    $var wire  1 q ecall $end
    $var wire  3 m fun3 [2:0] $end
    $var wire  7 n fun7 [6:0] $end
    $var wire 32 3 imm [31:0] $end
    $var wire  6 ( ins_cnt [5:0] $end
    $var wire 32 $ inst [31:0] $end
    $var wire  1 < jal $end
    $var wire  1 ; jalr $end
    $var wire  1 : load $end
    $var wire  4 % lsu_cnt [3:0] $end
    $var wire  1 8 lui $end
    $var wire  1 & mem_cnt $end
    $var wire  1 r mret $end
    $var wire  7 l opcode [6:0] $end
    $var wire  4 * pc_cnt [3:0] $end
    $var wire  5 - rd [4:0] $end
    $var wire  5 + rs1 [4:0] $end
    $var wire  5 , rs2 [4:0] $end
   $upscope $end
   $scope module ifu_t0 $end
    $var wire  1 6 br_taken $end
    $var wire  1 w bxx $end
    $var wire  1 z clk $end
    $var wire 32 5 csr_data [31:0] $end
    $var wire  1 u ecall $end
    $var wire 32 3 imm [31:0] $end
    $var wire 32 $ inst [31:0] $end
    $var wire  1 t jal $end
    $var wire  1 s jalr $end
    $var wire  1 v mret $end
    $var wire  4 * pc_cnt [3:0] $end
    $var wire 32 # pc_out [31:0] $end
    $var wire  1 { reset $end
    $var wire 32 . ret [31:0] $end
    $var wire 32 x target_pc [31:0] $end
   $upscope $end
   $scope module lsu_t0 $end
    $var wire 32 1 addr_load [31:0] $end
    $var wire 32 1 addr_store [31:0] $end
    $var wire 32 2 data_load [31:0] $end
    $var wire 32 / data_store [31:0] $end
    $var wire  4 % lsu_cnt [3:0] $end
    $var wire 32 y temp [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


