$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  1 T clk $end
  $var wire 32 W ins [31:0] $end
  $var wire 32 V pc [31:0] $end
  $var wire  1 U reset $end
  $var wire 32 X result [31:0] $end
  $scope module ysyx_24080018_cpu $end
   $var wire  3 _ alu_operate [2:0] $end
   $var wire  1 T clk $end
   $var wire  7 ] fun1 [6:0] $end
   $var wire  3 [ fun3 [2:0] $end
   $var wire 12 Y imm [11:0] $end
   $var wire 32 ) imm_extended [31:0] $end
   $var wire 32 W ins [31:0] $end
   $var wire 32 V pc [31:0] $end
   $var wire  5 \ rd [4:0] $end
   $var wire 32 - rdata [31:0] $end
   $var wire  1 U reset $end
   $var wire 32 X result [31:0] $end
   $var wire  5 Z rs1 [4:0] $end
   $var wire  1 ( we $end
   $scope module alu0 $end
    $var wire 32 ) a [31:0] $end
    $var wire 32 - b [31:0] $end
    $var wire  3 _ operate [2:0] $end
    $var wire 32 X result [31:0] $end
    $scope module i2 $end
     $var wire 32 b DATA_LEN [31:0] $end
     $var wire 32 a KEY_LEN [31:0] $end
     $var wire 32 ` NR_KEY [31:0] $end
     $var wire  3 _ key [2:0] $end
     $var wire 35 . lut [34:0] $end
     $var wire 32 X out [31:0] $end
     $scope module i0 $end
      $var wire 32 b DATA_LEN [31:0] $end
      $var wire 32 c HAS_DEFAULT [31:0] $end
      $var wire 32 a KEY_LEN [31:0] $end
      $var wire 32 ` NR_KEY [31:0] $end
      $var wire 32 e PAIR_LEN [31:0] $end
      $var wire 32 2 data_list[0] [31:0] $end
      $var wire 32 d default_out [31:0] $end
      $var wire  1 $ hit $end
      $var wire 32 f i [31:0] $end
      $var wire  3 _ key [2:0] $end
      $var wire  3 # key_list[0] [2:0] $end
      $var wire 35 . lut [34:0] $end
      $var wire 32 3 lut_out [31:0] $end
      $var wire 32 X out [31:0] $end
      $var wire 35 0 pair_list[0] [34:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module gpr0 $end
    $var wire  1 T clk $end
    $var wire  5 \ rd [4:0] $end
    $var wire 32 - rdata [31:0] $end
    $var wire 32 X result [31:0] $end
    $var wire  5 Z rs1 [4:0] $end
    $var wire  1 ( we $end
    $scope module i2 $end
     $var wire 32 g ADDR_WIDTH [31:0] $end
     $var wire 32 b DATA_WIDTH [31:0] $end
     $var wire  1 T clk $end
     $var wire  5 Z raddr1 [4:0] $end
     $var wire 32 - rdata1 [31:0] $end
     $var wire 32 4 rf[0] [31:0] $end
     $var wire 32 > rf[10] [31:0] $end
     $var wire 32 ? rf[11] [31:0] $end
     $var wire 32 @ rf[12] [31:0] $end
     $var wire 32 A rf[13] [31:0] $end
     $var wire 32 B rf[14] [31:0] $end
     $var wire 32 C rf[15] [31:0] $end
     $var wire 32 D rf[16] [31:0] $end
     $var wire 32 E rf[17] [31:0] $end
     $var wire 32 F rf[18] [31:0] $end
     $var wire 32 G rf[19] [31:0] $end
     $var wire 32 5 rf[1] [31:0] $end
     $var wire 32 H rf[20] [31:0] $end
     $var wire 32 I rf[21] [31:0] $end
     $var wire 32 J rf[22] [31:0] $end
     $var wire 32 K rf[23] [31:0] $end
     $var wire 32 L rf[24] [31:0] $end
     $var wire 32 M rf[25] [31:0] $end
     $var wire 32 N rf[26] [31:0] $end
     $var wire 32 O rf[27] [31:0] $end
     $var wire 32 P rf[28] [31:0] $end
     $var wire 32 Q rf[29] [31:0] $end
     $var wire 32 6 rf[2] [31:0] $end
     $var wire 32 R rf[30] [31:0] $end
     $var wire 32 S rf[31] [31:0] $end
     $var wire 32 7 rf[3] [31:0] $end
     $var wire 32 8 rf[4] [31:0] $end
     $var wire 32 9 rf[5] [31:0] $end
     $var wire 32 : rf[6] [31:0] $end
     $var wire 32 ; rf[7] [31:0] $end
     $var wire 32 < rf[8] [31:0] $end
     $var wire 32 = rf[9] [31:0] $end
     $var wire  5 \ waddr [4:0] $end
     $var wire 32 X wdata [31:0] $end
     $var wire  1 ( wen $end
    $upscope $end
   $upscope $end
   $scope module idu0 $end
    $var wire  3 _ alu_operate [2:0] $end
    $var wire 10 * fun [9:0] $end
    $var wire  7 ] fun1 [6:0] $end
    $var wire  3 [ fun3 [2:0] $end
    $var wire  1 ( we $end
    $scope module i0 $end
     $var wire 32 ` DATA_LEN [31:0] $end
     $var wire 32 h KEY_LEN [31:0] $end
     $var wire 32 ` NR_KEY [31:0] $end
     $var wire  1 i default_out [0:0] $end
     $var wire 10 * key [9:0] $end
     $var wire 11 j lut [10:0] $end
     $var wire  1 ( out [0:0] $end
     $scope module i0 $end
      $var wire 32 ` DATA_LEN [31:0] $end
      $var wire 32 ` HAS_DEFAULT [31:0] $end
      $var wire 32 h KEY_LEN [31:0] $end
      $var wire 32 ` NR_KEY [31:0] $end
      $var wire 32 k PAIR_LEN [31:0] $end
      $var wire  1 ' data_list[0] [0:0] $end
      $var wire  1 i default_out [0:0] $end
      $var wire  1 , hit $end
      $var wire 32 f i [31:0] $end
      $var wire 10 * key [9:0] $end
      $var wire 10 & key_list[0] [9:0] $end
      $var wire 11 j lut [10:0] $end
      $var wire  1 + lut_out [0:0] $end
      $var wire  1 ( out [0:0] $end
      $var wire 11 % pair_list[0] [10:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module pc0 $end
    $var wire  1 T clk $end
    $var wire 32 V pc [31:0] $end
    $var wire 32 ^ pc_temp [31:0] $end
    $var wire  1 U reset $end
    $scope module reg_inst $end
     $var wire 32 l RESET_VAL [31:0] $end
     $var wire 32 b WIDTH [31:0] $end
     $var wire  1 T clk $end
     $var wire 32 ^ din [31:0] $end
     $var wire 32 V dout [31:0] $end
     $var wire  1 U rst $end
     $var wire  1 m wen $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b000 #
1$
b00100110001 %
b0010011000 &
1'
1(
b00000000000000000000000000000010 )
b0010011000 *
1+
1,
b00000000000000000000000000000000 -
b00000000000000000000000000000000010 .
b00000000000000000000000000000000010 0
b00000000000000000000000000000010 2
b00000000000000000000000000000010 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
0T
0U
b00000000000000000000000000000000 V
b00000000001000000000000010010011 W
b00000000000000000000000000000010 X
b000000000010 Y
b00000 Z
b000 [
b00001 \
b0010011 ]
b00000000000000000000000000000100 ^
b000 _
b00000000000000000000000000000001 `
b00000000000000000000000000000011 a
b00000000000000000000000000100000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000100011 e
b00000000000000000000000000000001 f
b00000000000000000000000000000101 g
b00000000000000000000000000001010 h
0i
b00100110001 j
b00000000000000000000000000001011 k
b10000000000000000000000000000000 l
1m
#2
b00000000000000000000000000000010 5
1T
b00000000000000000000000000000100 V
b00000000000000000000000000001000 ^
#3
0T
b00000000001000000000000100010011 W
b00010 \
#4
b00000000000000000000000000000010 6
1T
b00000000000000000000000000001000 V
b00000000000000000000000000001100 ^
#5
b00000000000000000000000000000011 )
b00000000000000000000000000000000011 .
b00000000000000000000000000000000011 0
b00000000000000000000000000000011 2
b00000000000000000000000000000011 3
0T
b00000000001100000000000100010011 W
b00000000000000000000000000000011 X
b000000000011 Y
#6
b00000000000000000000000000000011 6
1T
b00000000000000000000000000001100 V
b00000000000000000000000000010000 ^
#7
b00000000000000000000000000000101 )
b00000000000000000000000000000010 -
b00000000000000000000000000000000111 .
b00000000000000000000000000000000111 0
b00000000000000000000000000000111 2
b00000000000000000000000000000111 3
0T
b00000000010100001000000100010011 W
b00000000000000000000000000000111 X
b000000000101 Y
b00001 Z
#8
b00000000000000000000000000000111 6
1T
b00000000000000000000000000010000 V
b00000000000000000000000000010100 ^
#9
0(
b00000000000000000000000000000000 )
b1110011000 *
0+
0,
b00000000000000000000000000000000 -
b00000000000000000000000000000000000 .
b00000000000000000000000000000000000 0
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
0T
b00000000000000000000000001110011 W
b00000000000000000000000000000000 X
b000000000000 Y
b00000 Z
b00000 \
b1110011 ]
#10
1T
b00000000000000000000000000010100 V
b00000000000000000000000000011000 ^
