!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/furiosa/ysyx-workbench/npc/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
ADDI	csrc/init.c	/^#define ADDI /;"	d	file:
ALU	vsrc/ALU.v	/^module ALU($/;"	m
ANSI_BG_BLACK	csrc/include/utils.h	/^#define ANSI_BG_BLACK /;"	d
ANSI_BG_BLUE	csrc/include/utils.h	/^#define ANSI_BG_BLUE /;"	d
ANSI_BG_CYAN	csrc/include/utils.h	/^#define ANSI_BG_CYAN /;"	d
ANSI_BG_GREEN	csrc/include/utils.h	/^#define ANSI_BG_GREEN /;"	d
ANSI_BG_MAGENTA	csrc/include/utils.h	/^#define ANSI_BG_MAGENTA /;"	d
ANSI_BG_RED	csrc/include/utils.h	/^#define ANSI_BG_RED /;"	d
ANSI_BG_WHITE	csrc/include/utils.h	/^#define ANSI_BG_WHITE /;"	d
ANSI_BG_YELLOW	csrc/include/utils.h	/^#define ANSI_BG_YELLOW /;"	d
ANSI_FG_BLACK	csrc/include/utils.h	/^#define ANSI_FG_BLACK /;"	d
ANSI_FG_BLUE	csrc/include/utils.h	/^#define ANSI_FG_BLUE /;"	d
ANSI_FG_CYAN	csrc/include/utils.h	/^#define ANSI_FG_CYAN /;"	d
ANSI_FG_GREEN	csrc/include/utils.h	/^#define ANSI_FG_GREEN /;"	d
ANSI_FG_MAGENTA	csrc/include/utils.h	/^#define ANSI_FG_MAGENTA /;"	d
ANSI_FG_RED	csrc/include/utils.h	/^#define ANSI_FG_RED /;"	d
ANSI_FG_WHITE	csrc/include/utils.h	/^#define ANSI_FG_WHITE /;"	d
ANSI_FG_YELLOW	csrc/include/utils.h	/^#define ANSI_FG_YELLOW /;"	d
ANSI_FMT	csrc/include/utils.h	/^#define ANSI_FMT(/;"	d
ANSI_NONE	csrc/include/utils.h	/^#define ANSI_NONE /;"	d
ARRLEN	csrc/include/macro.h	/^#define ARRLEN(/;"	d
ARRLEN	csrc/include/sdb.h	/^#define ARRLEN(/;"	d
Assert	csrc/include/utils.h	/^#define Assert(/;"	d
BIN	Makefile	/^BIN := $(OBJ_DIR)\/V$(TOP_MODULE)$/;"	m
BITMASK	csrc/include/macro.h	/^#define BITMASK(/;"	d
BITS	csrc/include/macro.h	/^#define BITS(/;"	d
BType	vsrc/IDU.v	/^	wire BType;$/;"	n	module:IDU
CHOOSE2nd	csrc/include/macro.h	/^#define CHOOSE2nd(/;"	d
CPU_state	csrc/include/cpu.h	/^} CPU_state;$/;"	t	typeref:struct:__anon163a60f00208
CSRs	csrc/include/cpu.h	/^} CSRs;$/;"	t	typeref:struct:__anon163a60f00108
Count1	csrc/sdb/expr.c	/^static word_t Count1(int op,word_t val,bool *success) {$/;"	f	typeref:typename:word_t	file:
Count2	csrc/sdb/expr.c	/^static word_t Count2(word_t val1,int op,word_t val2,bool *success) {$/;"	f	typeref:typename:word_t	file:
DATA_LEN	vsrc/MuxKeyInternal.v	/^module MuxKeyInternal #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1, HAS_DEFAULT = 0)($/;"	c	module:MuxKeyInternal
DATA_LEN	vsrc/MuxKeyWithDefault.v	/^module MuxKeyWithDefault #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1) ($/;"	c	module:MuxKeyWithDefault
DIFFTEST	Makefile	/^DIFFTEST := $(NEMU_HOME)\/build\/riscv32-nemu-interpreter-so$/;"	m
EBREAK	csrc/init.c	/^#define EBREAK /;"	d	file:
EXU	vsrc/EXU.v	/^module EXU($/;"	m
FMT_PADDR	csrc/include/common.h	/^#define FMT_PADDR /;"	d
FMT_WORD	csrc/include/common.h	/^#define FMT_WORD /;"	d
HAS_DEFAULT	vsrc/MuxKeyInternal.v	/^module MuxKeyInternal #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1, HAS_DEFAULT = 0)($/;"	c	module:MuxKeyInternal
IDU	vsrc/IDU.v	/^module IDU($/;"	m
IFDEF	csrc/include/macro.h	/^#define IFDEF(/;"	d
IFNDEF	csrc/include/macro.h	/^#define IFNDEF(/;"	d
IFONE	csrc/include/macro.h	/^#define IFONE(/;"	d
IFU	vsrc/IFU.v	/^module IFU($/;"	m
IFZERO	csrc/include/macro.h	/^#define IFZERO(/;"	d
IMG	csrc/script/native.mk	/^IMG ?= $/;"	m
INCLUDES	Makefile	/^INCLUDES := $(addprefix -I, $(INC_PATH))$/;"	m
INC_PATH	Makefile	/^INC_PATH := $(NPC_HOME)\/csrc\/include$/;"	m
ISADecodeInfo	csrc/include/cpu.h	/^} ISADecodeInfo;$/;"	t	typeref:struct:__anon163a60f00308
ISDEF	csrc/include/macro.h	/^#define ISDEF(/;"	d
ISNDEF	csrc/include/macro.h	/^#define ISNDEF(/;"	d
ISONE	csrc/include/macro.h	/^#define ISONE(/;"	d
ISZERO	csrc/include/macro.h	/^#define ISZERO(/;"	d
IType	vsrc/IDU.v	/^	wire IType;$/;"	n	module:IDU
JType	vsrc/IDU.v	/^	wire JType;$/;"	n	module:IDU
KEY_LEN	vsrc/MuxKeyInternal.v	/^module MuxKeyInternal #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1, HAS_DEFAULT = 0)($/;"	c	module:MuxKeyInternal
KEY_LEN	vsrc/MuxKeyWithDefault.v	/^module MuxKeyWithDefault #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1) ($/;"	c	module:MuxKeyWithDefault
LOG	Makefile	/^LOG ?= $(NPC_HOME)\/obj_dir\/log.txt$/;"	m
Log	csrc/include/utils.h	/^#define Log(/;"	d
MAP	csrc/include/macro.h	/^#define MAP(/;"	d
MAX_INST_TO_PRINT	csrc/sim.cpp	/^#define MAX_INST_TO_PRINT /;"	d	file:
MEM	vsrc/MEM.v	/^module MEM($/;"	m
MEMORY_BASE	csrc/include/common.h	/^#define MEMORY_BASE /;"	d
MEMORY_SIZE	csrc/include/common.h	/^#define MEMORY_SIZE /;"	d
MUXDEF	csrc/include/macro.h	/^#define MUXDEF(/;"	d
MUXNDEF	csrc/include/macro.h	/^#define MUXNDEF(/;"	d
MUXONE	csrc/include/macro.h	/^#define MUXONE(/;"	d
MUXZERO	csrc/include/macro.h	/^#define MUXZERO(/;"	d
MUX_MACRO_PROPERTY	csrc/include/macro.h	/^#define MUX_MACRO_PROPERTY(/;"	d
MUX_WITH_COMMA	csrc/include/macro.h	/^#define MUX_WITH_COMMA(/;"	d
Mode	vsrc/ALU.v	/^	input [5 :0] Mode,$/;"	p	module:ALU
Mode	vsrc/EXU.v	/^	input [5:0]  Mode$/;"	p	module:EXU
Mode	vsrc/IDU.v	/^	output [5 :0] Mode$/;"	p	module:IDU
Mode	vsrc/MEM.v	/^	input [5 :0] Mode,$/;"	p	module:MEM
Mode	vsrc/top.v	/^	wire [5 :0] Mode;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
MuxKeyInternal	vsrc/MuxKeyInternal.v	/^module MuxKeyInternal #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1, HAS_DEFAULT = 0)($/;"	m
MuxKeyWithDefault	vsrc/MuxKeyWithDefault.v	/^module MuxKeyWithDefault #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1) ($/;"	m
NEMUState	csrc/include/utils.h	/^} NEMUState;$/;"	t	typeref:struct:__anon008c53990208
NEMU_ABORT	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon008c53990103
NEMU_END	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon008c53990103
NEMU_QUIT	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon008c53990103
NEMU_RUNNING	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon008c53990103
NEMU_STOP	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon008c53990103
NO	csrc/sdb/watchpoint.c	/^  int NO;$/;"	m	struct:watchpoint	typeref:typename:int	file:
NPCTRAP	csrc/sim.cpp	/^extern "C" void NPCTRAP(){$/;"	f	typeref:typename:void
NPCTRAP	vsrc/top.v	/^import "DPI-C" function void NPCTRAP();$/;"	f
NPC_EXEC	Makefile	/^NPC_EXEC := $(BIN) $(RUN_FLAGS)$/;"	m
NPC_EXEC	csrc/script/native.mk	/^NPC_EXEC := $(ARGS) $(IMG)$/;"	m
NR_CMD	csrc/sdb/sdb.c	/^#define NR_CMD /;"	d	file:
NR_KEY	vsrc/MuxKeyInternal.v	/^module MuxKeyInternal #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1, HAS_DEFAULT = 0)($/;"	c	module:MuxKeyInternal
NR_KEY	vsrc/MuxKeyWithDefault.v	/^module MuxKeyWithDefault #(NR_KEY = 2, KEY_LEN = 1, DATA_LEN = 1) ($/;"	c	module:MuxKeyWithDefault
NR_REGEX	csrc/sdb/expr.c	/^#define NR_REGEX /;"	d	file:
NR_WP	csrc/sdb/watchpoint.c	/^#define NR_WP /;"	d	file:
NUMBERIC_FMT	csrc/sim.cpp	/^#define NUMBERIC_FMT /;"	d	file:
OBJ_DIR	Makefile	/^OBJ_DIR := .\/obj_dir$/;"	m
PAIR_LEN	vsrc/MuxKeyInternal.v	/^  localparam PAIR_LEN = KEY_LEN + DATA_LEN;$/;"	c	module:MuxKeyInternal
PC	vsrc/PC.v	/^module PC($/;"	m
PC_RESET_OFFSET	csrc/include/common.h	/^#define PC_RESET_OFFSET /;"	d
PG_ALIGN	csrc/include/common.h	/^#define PG_ALIGN /;"	d
RESET_VAL	vsrc/Reg.v	/^module Reg #(WIDTH = 32, RESET_VAL = 32'h80000000) ($/;"	c	module:Reg
RESET_VECTOR	csrc/include/common.h	/^#define RESET_VECTOR /;"	d
ROUNDDOWN	csrc/include/macro.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	csrc/include/macro.h	/^#define ROUNDUP(/;"	d
RType	vsrc/IDU.v	/^	wire RType;$/;"	n	module:IDU
RUN_FLAGS	Makefile	/^RUN_FLAGS := --img=$(IMG) --diff=$(DIFFTEST) --log=$(LOG)$/;"	m
Reg	vsrc/Reg.v	/^module Reg #(WIDTH = 32, RESET_VAL = 32'h80000000) ($/;"	m
RegisterFile	vsrc/RegisterFile.v	/^module RegisterFile ($/;"	m
SEED_END	csrc/main.c	/^#define SEED_END /;"	d	file:
SEXT	csrc/include/macro.h	/^#define SEXT(/;"	d
STRLEN	csrc/include/macro.h	/^#define STRLEN(/;"	d
SType	vsrc/IDU.v	/^	wire SType;$/;"	n	module:IDU
TK_AND	csrc/sdb/expr.c	/^  TK_AND   = 4,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_DEREF	csrc/sdb/expr.c	/^  TK_DEREF = 12,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_EQ	csrc/sdb/expr.c	/^  TK_EQ    = 1,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_GE	csrc/sdb/expr.c	/^  TK_GE    = 9,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_GT	csrc/sdb/expr.c	/^  TK_GT    = 7,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_LE	csrc/sdb/expr.c	/^  TK_LE    = 8,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_LT	csrc/sdb/expr.c	/^  TK_LT    = 6,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_NEG	csrc/sdb/expr.c	/^  TK_NEG   = 11,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_NEQ	csrc/sdb/expr.c	/^  TK_NEQ   = 3,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_NOTYPE	csrc/sdb/expr.c	/^  TK_NOTYPE = 256,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_NUM	csrc/sdb/expr.c	/^  TK_NUM   = 2,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_OR	csrc/sdb/expr.c	/^  TK_OR    = 5,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_POS	csrc/sdb/expr.c	/^  TK_POS   = 13,$/;"	e	enum:__anonf6e6fbb70103	file:
TK_REG	csrc/sdb/expr.c	/^  TK_REG   = 10,$/;"	e	enum:__anonf6e6fbb70103	file:
TODO	csrc/include/utils.h	/^#define TODO(/;"	d
TOP_MODULE	Makefile	/^TOP_MODULE := top$/;"	m
Token	csrc/sdb/expr.c	/^} Token;$/;"	t	typeref:struct:token	file:
UType	vsrc/IDU.v	/^	wire UType;$/;"	n	module:IDU
V_SRC	Makefile	/^V_SRC := $(shell find $(NPC_HOME)\/vsrc -name "*.v")$/;"	m
WIDTH	vsrc/Reg.v	/^module Reg #(WIDTH = 32, RESET_VAL = 32'h80000000) ($/;"	c	module:Reg
WP	csrc/sdb/watchpoint.c	/^} WP;$/;"	t	typeref:struct:watchpoint	file:
_Log	csrc/include/utils.h	/^#define _Log(/;"	d
__COMMON_H__	csrc/include/common.h	/^#define __COMMON_H__$/;"	d
__CPU_CPU_H__	csrc/include/cpu.h	/^#define __CPU_CPU_H__$/;"	d
__IGNORE	csrc/include/macro.h	/^#define __IGNORE(/;"	d
__ISA_RISCV_H__	csrc/include/isa.h	/^#define __ISA_RISCV_H__$/;"	d
__KEEP	csrc/include/macro.h	/^#define __KEEP(/;"	d
__MACRO_H__	csrc/include/macro.h	/^#define __MACRO_H__$/;"	d
__MEMORY_HOST_H__	csrc/include/host.h	/^#define __MEMORY_HOST_H__$/;"	d
__MEMORY_PADDR_H__	csrc/include/paddr.h	/^#define __MEMORY_PADDR_H__$/;"	d
__P_DEF_0	csrc/include/macro.h	/^#define __P_DEF_0 /;"	d
__P_DEF_1	csrc/include/macro.h	/^#define __P_DEF_1 /;"	d
__P_ONE_1	csrc/include/macro.h	/^#define __P_ONE_1 /;"	d
__P_ZERO_0	csrc/include/macro.h	/^#define __P_ZERO_0 /;"	d
__SDB_H__	csrc/include/sdb.h	/^#define __SDB_H__$/;"	d
__SIM_H_	csrc/include/sim.h	/^#define __SIM_H_$/;"	d
__UTILS_H__	csrc/include/utils.h	/^#define __UTILS_H__$/;"	d
__anon008c53990103	csrc/include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	g
__anon008c53990208	csrc/include/utils.h	/^typedef struct {$/;"	s
__anon163a60f00108	csrc/include/cpu.h	/^typedef struct {\/\/change$/;"	s
__anon163a60f00208	csrc/include/cpu.h	/^typedef struct {$/;"	s
__anon163a60f00308	csrc/include/cpu.h	/^typedef struct {$/;"	s
__anon163a60f0040a	csrc/include/cpu.h	/^  union {$/;"	u	struct:__anon163a60f00308
__anon467cfc310108	csrc/sdb/sdb.c	/^static struct {$/;"	s	file:
__anonf6e6fbb70103	csrc/sdb/expr.c	/^enum {$/;"	g	file:
a	vsrc/ALU.v	/^	wire [31:0] a;$/;"	n	module:ALU
add_1	vsrc/define.v	/^`define  add_1     6'b000001 $/;"	c
addi_1	vsrc/define.v	/^`define  addi_1    6'b001011$/;"	c
addr	vsrc/MEM.v	/^	input [31:0] addr,$/;"	p	module:MEM
addr	vsrc/top.v	/^	wire [31:0] addr;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
addr	vsrc/top.v	/^import "DPI-C" function int  paddr_read(input int addr, input int size);$/;"	p	function:NPCTRAP.paddr_write.paddr_read
addr	vsrc/top.v	/^import "DPI-C" function void paddr_write(input int addr, input int data, input int size);$/;"	p	function:NPCTRAP.paddr_write
all	Makefile	/^all: run$/;"	t
alu	vsrc/EXU.v	/^	ALU alu($/;"	i	module:EXU
alu_result	vsrc/EXU.v	/^	wire [31:0] alu_result;$/;"	n	module:EXU
am_init_monitor	csrc/main.c	/^void am_init_monitor(int argc,char *argv[]) {$/;"	f	typeref:typename:void
and_1	vsrc/define.v	/^`define  and_1     6'b001010$/;"	c
andi_1	vsrc/define.v	/^`define  andi_1    6'b010000$/;"	c
assert_fail_msg	csrc/sim.cpp	/^extern "C" void assert_fail_msg(){$/;"	f	typeref:typename:void
auipc	vsrc/IDU.v	/^	wire auipc;$/;"	n	module:IDU
auipc_1	vsrc/define.v	/^`define  auipc_1   6'b010100$/;"	c
b	vsrc/ALU.v	/^	wire [31:0] b;$/;"	n	module:ALU
beq_1	vsrc/define.v	/^`define  beq_1 		 6'b100000$/;"	c
bge_1	vsrc/define.v	/^`define  bge_1		 6'b100011$/;"	c
bgeu_1	vsrc/define.v	/^`define  bgeu_1		 6'b100101$/;"	c
bin_end	csrc/cpu/am-bin.S	/^bin_end:$/;"	l
bin_start	csrc/cpu/am-bin.S	/^bin_start:$/;"	l
blt_1	vsrc/define.v	/^`define  blt_1		 6'b100010$/;"	c
bltu_1	vsrc/define.v	/^`define  bltu_1		 6'b100100$/;"	c
bne_1	vsrc/define.v	/^`define  bne_1		 6'b100001$/;"	c
boot_time	csrc/utils/timer.c	/^static uint64_t boot_time = 0;$/;"	v	typeref:typename:uint64_t	file:
bxx_jump	vsrc/IFU.v	/^	input bxx_jump,$/;"	p	module:IFU
bxx_jump	vsrc/PC.v	/^	input bxx_jump,$/;"	p	module:PC
bxx_jump	vsrc/top.v	/^	wire bxx_jump;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
check_parentheses	csrc/sdb/expr.c	/^bool check_parentheses(int p ,int q) {$/;"	f	typeref:typename:bool
clean	Makefile	/^clean:$/;"	t
clk	vsrc/EXU.v	/^	input clk,$/;"	p	module:EXU
clk	vsrc/IFU.v	/^	input clk,$/;"	p	module:IFU
clk	vsrc/MEM.v	/^	input clk,$/;"	p	module:MEM
clk	vsrc/PC.v	/^	input clk,$/;"	p	module:PC
clk	vsrc/Reg.v	/^  input clk,$/;"	p	module:Reg
clk	vsrc/RegisterFile.v	/^  input clk,$/;"	p	module:RegisterFile
clk	vsrc/top.v	/^	input clk,$/;"	p	module:NPCTRAP.paddr_write.paddr_read.top
cmd_c	csrc/sdb/sdb.c	/^static int cmd_c(char *args) {$/;"	f	typeref:typename:int	file:
cmd_d	csrc/sdb/sdb.c	/^static int cmd_d(char *args){$/;"	f	typeref:typename:int	file:
cmd_help	csrc/sdb/sdb.c	/^static int cmd_help(char *args) {$/;"	f	typeref:typename:int	file:
cmd_info	csrc/sdb/sdb.c	/^static int cmd_info(char *args){$/;"	f	typeref:typename:int	file:
cmd_p	csrc/sdb/sdb.c	/^static int cmd_p(char *args){$/;"	f	typeref:typename:int	file:
cmd_q	csrc/sdb/sdb.c	/^static int cmd_q(char *args) {$/;"	f	typeref:typename:int	file:
cmd_r	csrc/sdb/sdb.c	/^static int cmd_r(char *args) {$/;"	f	typeref:typename:int	file:
cmd_si	csrc/sdb/sdb.c	/^static int cmd_si(char *args){$/;"	f	typeref:typename:int	file:
cmd_table	csrc/sdb/sdb.c	/^} cmd_table [] = {$/;"	v	typeref:struct:__anon467cfc310108[]
cmd_w	csrc/sdb/sdb.c	/^static int cmd_w(char *args){$/;"	f	typeref:typename:int	file:
cmd_x	csrc/sdb/sdb.c	/^static int cmd_x(char *args) {$/;"	f	typeref:typename:int	file:
concat	csrc/include/macro.h	/^#define concat(/;"	d
concat3	csrc/include/macro.h	/^#define concat3(/;"	d
concat4	csrc/include/macro.h	/^#define concat4(/;"	d
concat5	csrc/include/macro.h	/^#define concat5(/;"	d
concat_temp	csrc/include/macro.h	/^#define concat_temp(/;"	d
cpu_exec	csrc/sim.cpp	/^extern "C" void cpu_exec(uint32_t n) {$/;"	f	typeref:typename:void
csr	csrc/include/cpu.h	/^  CSRs csr;\/\/change  $/;"	m	struct:__anon163a60f00208	typeref:typename:CSRs
data	vsrc/top.v	/^import "DPI-C" function void paddr_write(input int addr, input int data, input int size);$/;"	p	function:NPCTRAP.paddr_write
data1	vsrc/ALU.v	/^	input [31:0] data1,$/;"	p	module:ALU
data2	vsrc/ALU.v	/^	input [31:0] data2,$/;"	p	module:ALU
data_list	vsrc/MuxKeyInternal.v	/^  wire [DATA_LEN-1:0] data_list [NR_KEY-1:0];$/;"	n	module:MuxKeyInternal
debug	Makefile	/^debug: $/;"	t
debug	Makefile	/^debug: run$/;"	t
default_out	vsrc/MuxKeyInternal.v	/^  input [DATA_LEN-1:0] default_out,$/;"	p	module:MuxKeyInternal
default_out	vsrc/MuxKeyWithDefault.v	/^  input [DATA_LEN-1:0] default_out,$/;"	p	module:MuxKeyWithDefault
description	csrc/sdb/sdb.c	/^  const char *description;$/;"	m	struct:__anon467cfc310108	typeref:typename:const char *	file:
diff_so_file	csrc/main.c	/^static char *diff_so_file = NULL;$/;"	v	typeref:typename:char *	file:
difftest_port	csrc/main.c	/^static int difftest_port = 1234;$/;"	v	typeref:typename:int	file:
din	vsrc/Reg.v	/^  input [WIDTH-1:0] din,$/;"	p	module:Reg
disassemble	csrc/utils/disasm.cc	/^extern "C" void disassemble(char *str, int size, uint64_t pc, uint8_t *code, int nbyte) {$/;"	f	typeref:typename:void
dout	vsrc/Reg.v	/^  output reg [WIDTH-1:0] dout,$/;"	p	module:Reg
ebreak	vsrc/IDU.v	/^	wire ebreak;$/;"	n	module:IDU
engine_start	csrc/main.c	/^void engine_start() {$/;"	f	typeref:typename:void
eval	csrc/sdb/expr.c	/^static word_t eval(int p,int q,bool *success){$/;"	f	typeref:typename:word_t	file:
eval_clk	csrc/sim.cpp	/^extern "C" void eval_clk(){$/;"	f	typeref:typename:void
execute	csrc/sim.cpp	/^extern "C" void execute(uint32_t n) {$/;"	f	typeref:typename:void
execute_once	csrc/sim.cpp	/^extern "C" void execute_once () {$/;"	f	typeref:typename:void
expr	csrc/sdb/expr.c	/^word_t expr(char *e, bool *success) {$/;"	f	typeref:typename:word_t
expr	csrc/sdb/watchpoint.c	/^  char expr[512];$/;"	m	struct:watchpoint	typeref:typename:char[512]	file:
exu_module	vsrc/top.v	/^	EXU exu_module($/;"	i	module:NPCTRAP.paddr_write.paddr_read.top
find_major	csrc/sdb/expr.c	/^int find_major(int p ,int q) {$/;"	f	typeref:typename:int
free_	csrc/sdb/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	typeref:typename:WP *	file:
free_wp	csrc/sdb/watchpoint.c	/^void free_wp(WP *wp) {$/;"	f	typeref:typename:void
ftrace_elf_file	csrc/main.c	/^char *ftrace_elf_file = NULL;$/;"	v	typeref:typename:char *
fun3	vsrc/IDU.v	/^	wire [2:0] fun3 ;$/;"	n	module:IDU
fun7	vsrc/IDU.v	/^	wire [6:0] fun7 ;$/;"	n	module:IDU
fun7_end	vsrc/IDU.v	/^	wire [6:0] fun7_end;$/;"	n	module:IDU
gDisassembler	csrc/utils/disasm.cc	/^static llvm::MCDisassembler *gDisassembler = nullptr;$/;"	v	typeref:typename:llvm::MCDisassembler *	file:
gIP	csrc/utils/disasm.cc	/^static llvm::MCInstPrinter *gIP = nullptr;$/;"	v	typeref:typename:llvm::MCInstPrinter *	file:
gSTI	csrc/utils/disasm.cc	/^static llvm::MCSubtargetInfo *gSTI = nullptr;$/;"	v	typeref:typename:llvm::MCSubtargetInfo *	file:
g_nr_guest_inst	csrc/sim.cpp	/^uint64_t g_nr_guest_inst = 0; $/;"	v	typeref:typename:uint64_t
g_print_step	csrc/sim.cpp	/^static bool g_print_step = false;$/;"	v	typeref:typename:bool	file:
g_timer	csrc/sim.cpp	/^static uint64_t g_timer = 0; \/\/ unit: us$/;"	v	typeref:typename:uint64_t	file:
get_time	csrc/utils/timer.c	/^uint64_t get_time() {$/;"	f	typeref:typename:uint64_t
get_time_internal	csrc/utils/timer.c	/^static uint64_t get_time_internal() {$/;"	f	typeref:typename:uint64_t	file:
gpr	csrc/include/cpu.h	/^  word_t gpr[32];$/;"	m	struct:__anon163a60f00208	typeref:typename:word_t[32]
guest_to_host	csrc/memory/paddr.c	/^uint8_t* guest_to_host(int paddr) { return pmem + paddr - MEMORY_BASE; }$/;"	f	typeref:typename:uint8_t *
halt_pc	csrc/include/utils.h	/^  vaddr_t halt_pc;$/;"	m	struct:__anon008c53990208	typeref:typename:vaddr_t
halt_ret	csrc/include/utils.h	/^  uint32_t halt_ret;$/;"	m	struct:__anon008c53990208	typeref:typename:uint32_t
handler	csrc/sdb/sdb.c	/^  int (*handler) (char *);$/;"	m	struct:__anon467cfc310108	typeref:typename:int (*)(char *)	file:
head	csrc/sdb/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	typeref:typename:WP *	file:
hit	vsrc/MuxKeyInternal.v	/^  reg hit;$/;"	r	module:MuxKeyInternal
host_read	csrc/include/host.h	/^static inline uint32_t host_read(void *addr, int len) {$/;"	f	typeref:typename:uint32_t
host_to_guest	csrc/memory/paddr.c	/^int host_to_guest(uint8_t *haddr) { return haddr - pmem + MEMORY_BASE; }$/;"	f	typeref:typename:int
host_write	csrc/include/host.h	/^static inline void host_write(void *addr, int len, uint32_t data) {$/;"	f	typeref:typename:void
i	vsrc/MuxKeyInternal.v	/^  integer i;$/;"	r	module:MuxKeyInternal
i	vsrc/RegisterFile.v	/^  integer i;    $/;"	r	module:RegisterFile
i0	vsrc/MuxKeyWithDefault.v	/^  MuxKeyInternal #(NR_KEY, KEY_LEN, DATA_LEN, 1) i0 (out, key, default_out, lut);$/;"	i	module:MuxKeyWithDefault
idu_module	vsrc/top.v	/^	IDU idu_module($/;"	i	module:NPCTRAP.paddr_write.paddr_read.top
ifu_module	vsrc/top.v	/^	IFU ifu_module($/;"	i	module:NPCTRAP.paddr_write.paddr_read.top
img	csrc/init.c	/^static const word_t img[] = {$/;"	v	typeref:typename:const word_t[]	file:
img_file	csrc/main.c	/^static char *img_file = NULL;$/;"	v	typeref:typename:char *	file:
imm	vsrc/ALU.v	/^	input [31:0] imm,$/;"	p	module:ALU
imm	vsrc/EXU.v	/^	input [31:0] imm,$/;"	p	module:EXU
imm	vsrc/IDU.v	/^	output [31:0] imm,$/;"	p	module:IDU
imm	vsrc/top.v	/^	wire [31:0] imm;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
imm2	vsrc/ALU.v	/^  MuxKeyWithDefault #(21, 6, 32) imm2($/;"	i	module:ALU
in_pmem	csrc/include/paddr.h	/^static inline bool in_pmem(int addr) {$/;"	f	typeref:typename:bool
init_disasm	csrc/utils/disasm.cc	/^extern "C" void init_disasm(const char *triple) {$/;"	f	typeref:typename:void
init_isa	csrc/init.c	/^void init_isa() {$/;"	f	typeref:typename:void
init_log	csrc/main.c	/^void init_log(const char *log_file) {$/;"	f	typeref:typename:void
init_mem	csrc/memory/paddr.c	/^void init_mem() {$/;"	f	typeref:typename:void
init_monitor	csrc/main.c	/^void init_monitor(int argc, char *argv[]) {$/;"	f	typeref:typename:void
init_rand	csrc/utils/timer.c	/^void init_rand() {$/;"	f	typeref:typename:void
init_regex	csrc/sdb/expr.c	/^void init_regex() {$/;"	f	typeref:typename:void
init_sdb	csrc/sdb/sdb.c	/^void init_sdb() {$/;"	f	typeref:typename:void
init_wp_pool	csrc/sdb/watchpoint.c	/^void init_wp_pool() {$/;"	f	typeref:typename:void
inst	csrc/include/cpu.h	/^  } inst;$/;"	m	struct:__anon163a60f00308	typeref:union:__anon163a60f00308::__anon163a60f0040a
inst	vsrc/IDU.v	/^	input [31:0] inst,$/;"	p	module:IDU
inst_fetch	csrc/cpu/cpu.c	/^word_t inst_fetch(paddr_t *pc, int len) {$/;"	f	typeref:typename:word_t
inst_wire	vsrc/top.v	/^	input [31:0] inst_wire$/;"	p	module:NPCTRAP.paddr_write.paddr_read.top
invalid_op	vsrc/define.v	/^`define  invalid_op 6'b000000$/;"	c
io_read	csrc/include/macro.h	/^#define io_read(/;"	d
io_write	csrc/include/macro.h	/^#define io_write(/;"	d
is_batch_mode	csrc/main.c	/^static int is_batch_mode = false;$/;"	v	typeref:typename:int	file:
is_batch_mode	csrc/sdb/sdb.c	/^static int is_batch_mode = false;$/;"	v	typeref:typename:int	file:
is_exit_status_bad	csrc/sim.cpp	/^extern "C" int is_exit_status_bad() {$/;"	f	typeref:typename:int
isa_reg_display	csrc/sim.cpp	/^extern "C" void isa_reg_display() {$/;"	f	typeref:typename:void
isa_reg_str2val	csrc/sim.cpp	/^extern "C" word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f	typeref:typename:word_t
isdef	csrc/include/macro.h	/^#define isdef(/;"	d
jal_1	vsrc/define.v	/^`define  jal_1		 6'b010110$/;"	c
jal_en	vsrc/IFU.v	/^	input jal_en,$/;"	p	module:IFU
jal_en	vsrc/PC.v	/^	input jal_en,$/;"	p	module:PC
jal_en	vsrc/top.v	/^	wire jal_en;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
jalr_1	vsrc/define.v	/^`define  jalr_1		 6'b011100$/;"	c
jalr_en	vsrc/IFU.v	/^	input jalr_en,$/;"	p	module:IFU
jalr_en	vsrc/PC.v	/^	input	jalr_en,$/;"	p	module:PC
jalr_en	vsrc/top.v	/^	wire jalr_en;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
key	vsrc/MuxKeyInternal.v	/^  input [KEY_LEN-1:0] key,$/;"	p	module:MuxKeyInternal
key	vsrc/MuxKeyWithDefault.v	/^  input [KEY_LEN-1:0] key,$/;"	p	module:MuxKeyWithDefault
key_list	vsrc/MuxKeyInternal.v	/^  wire [KEY_LEN-1:0] key_list [NR_KEY-1:0];$/;"	n	module:MuxKeyInternal
l_ren	vsrc/IDU.v	/^	output l_ren,$/;"	p	module:IDU
l_ren	vsrc/MEM.v	/^	input l_ren,$/;"	p	module:MEM
l_ren	vsrc/top.v	/^	wire l_ren;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
l_rready	vsrc/MEM.v	/^	output reg l_rready,$/;"	p	module:MEM
l_rready	vsrc/top.v	/^	wire l_rready;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
l_wen	vsrc/EXU.v	/^	input l_wen,$/;"	p	module:EXU
l_wen	vsrc/top.v	/^	wire l_wen;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
lb_1	vsrc/define.v	/^`define  lb_1			 6'b010111$/;"	c
lbu_1	vsrc/define.v	/^`define  lbu_1		 6'b011010$/;"	c
lh_1	vsrc/define.v	/^`define  lh_1			 6'b011000$/;"	c
lhu_1	vsrc/define.v	/^`define  lhu_1		 6'b011011$/;"	c
likely	csrc/include/macro.h	/^#define likely(/;"	d
load	csrc/cpu/cpu.c	/^word_t load(vaddr_t *addr, int len) {$/;"	f	typeref:typename:word_t
load_img	csrc/main.c	/^static long load_img() {   $/;"	f	typeref:typename:long	file:
load_img	csrc/main.c	/^static long load_img(char *img_file) {$/;"	f	typeref:typename:long	file:
load_result	vsrc/EXU.v	/^	input [31:0] load_result,$/;"	p	module:EXU
load_result	vsrc/MEM.v	/^	output [31:0] load_result$/;"	p	module:MEM
load_result	vsrc/top.v	/^	wire [31:0] load_result;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
log_enable	csrc/main.c	/^bool log_enable() {$/;"	f	typeref:typename:bool
log_file	csrc/main.c	/^static char *log_file = NULL;$/;"	v	typeref:typename:char *	file:
log_fp	csrc/main.c	/^FILE *log_fp = NULL;$/;"	v	typeref:typename:FILE *
log_write	csrc/include/utils.h	/^#define log_write(/;"	d
logbuf	csrc/sim.cpp	/^static char logbuf[128];$/;"	v	typeref:typename:char[128]	file:
lui	vsrc/IDU.v	/^	wire lui;$/;"	n	module:IDU
lui_1	vsrc/define.v	/^`define  lui_1 		 6'b010101$/;"	c
lut	vsrc/MuxKeyInternal.v	/^  input [NR_KEY*(KEY_LEN + DATA_LEN)-1:0] lut$/;"	p	module:MuxKeyInternal
lut	vsrc/MuxKeyWithDefault.v	/^  input [NR_KEY*(KEY_LEN + DATA_LEN)-1:0] lut$/;"	p	module:MuxKeyWithDefault
lut_out	vsrc/MuxKeyInternal.v	/^  reg [DATA_LEN-1 : 0] lut_out;$/;"	r	module:MuxKeyInternal
lw_1	vsrc/define.v	/^`define  lw_1			 6'b011001$/;"	c
main	csrc/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
make_token	csrc/sdb/expr.c	/^static bool make_token(char *e) {$/;"	f	typeref:typename:bool	file:
mcause	csrc/include/cpu.h	/^  word_t mcause;$/;"	m	struct:__anon163a60f00108	typeref:typename:word_t
mem_module	vsrc/top.v	/^	MEM mem_module($/;"	i	module:NPCTRAP.paddr_write.paddr_read.top
mepc	csrc/include/cpu.h	/^  vaddr_t mepc;$/;"	m	struct:__anon163a60f00108	typeref:typename:vaddr_t
mstatus	csrc/include/cpu.h	/^  word_t mstatus;$/;"	m	struct:__anon163a60f00108	typeref:typename:word_t
mtrace_log_file	csrc/sim.cpp	/^FILE *mtrace_log_file = NULL;$/;"	v	typeref:typename:FILE *
mtvec	csrc/include/cpu.h	/^  word_t mtvec;$/;"	m	struct:__anon163a60f00108	typeref:typename:word_t
mux_result	vsrc/ALU.v	/^	wire [31:0] mux_result;$/;"	n	module:ALU
n	vsrc/MuxKeyInternal.v	/^  genvar n;$/;"	r	module:MuxKeyInternal
name	csrc/sdb/sdb.c	/^  const char *name;$/;"	m	struct:__anon467cfc310108	typeref:typename:const char *	file:
nemu_state	csrc/utils/state.c	/^NEMUState nemu_state = { .state = NEMU_STOP };$/;"	v	typeref:typename:NEMUState
new_wp	csrc/sdb/watchpoint.c	/^static WP* new_wp() {$/;"	f	typeref:typename:WP *	file:
next	csrc/sdb/watchpoint.c	/^  struct watchpoint *next;$/;"	m	struct:watchpoint	typeref:struct:watchpoint *	file:
npc_cpu	csrc/sim.cpp	/^CPU_state npc_cpu = {} ;$/;"	v	typeref:typename:CPU_state
nr_token	csrc/sdb/expr.c	/^static int nr_token __attribute__((used))  = 0;$/;"	v	typeref:typename:int	file:
offset	vsrc/IFU.v	/^	input  [31:0] offset,$/;"	p	module:IFU
offset	vsrc/PC.v	/^	input [31:0] offset,$/;"	p	module:PC
offset	vsrc/top.v	/^	wire [31:0] offset;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
old	csrc/sdb/watchpoint.c	/^  word_t old;\/\/讲义默认32位无符号数$/;"	m	struct:watchpoint	typeref:typename:word_t	file:
or_1	vsrc/define.v	/^`define  or_1      6'b001001$/;"	c
ori_1	vsrc/define.v	/^`define  ori_1     6'b001111$/;"	c
out	vsrc/MuxKeyInternal.v	/^  output reg [DATA_LEN-1:0] out,$/;"	p	module:MuxKeyInternal
out	vsrc/MuxKeyWithDefault.v	/^  output [DATA_LEN-1:0] out,$/;"	p	module:MuxKeyWithDefault
out_of_bound	csrc/memory/paddr.c	/^static void out_of_bound(int addr) {$/;"	f	typeref:typename:void	file:
paddr_read	csrc/memory/paddr.c	/^int32_t paddr_read(int addr, int len) {$/;"	f	typeref:typename:int32_t
paddr_read	vsrc/top.v	/^import "DPI-C" function int  paddr_read(input int addr, input int size);$/;"	f	function:NPCTRAP.paddr_write
paddr_t	csrc/include/common.h	/^typedef word_t paddr_t;$/;"	t	typeref:typename:word_t
paddr_write	csrc/memory/paddr.c	/^void paddr_write(int addr, int len, int32_t data) {$/;"	f	typeref:typename:void
paddr_write	vsrc/top.v	/^import "DPI-C" function void paddr_write(input int addr, input int data, input int size);$/;"	f	function:NPCTRAP
pair_list	vsrc/MuxKeyInternal.v	/^  wire [PAIR_LEN-1:0] pair_list [NR_KEY-1:0];$/;"	n	module:MuxKeyInternal
panic	csrc/include/utils.h	/^#define panic(/;"	d
parse_args	csrc/main.c	/^static int parse_args(int argc, char *argv[]) {$/;"	f	typeref:typename:int	file:
pc	csrc/include/cpu.h	/^  vaddr_t pc;$/;"	m	struct:__anon163a60f00208	typeref:typename:vaddr_t
pc	vsrc/ALU.v	/^	input [31:0] pc,$/;"	p	module:ALU
pc	vsrc/IFU.v	/^	output [31:0] pc$/;"	p	module:IFU
pc	vsrc/PC.v	/^	output [31:0] pc$/;"	p	module:PC
pc	vsrc/top.v	/^	output [31:0] pc,$/;"	p	module:NPCTRAP.paddr_write.paddr_read.top
pc_exu	vsrc/EXU.v	/^	input [31:0] pc_exu,$/;"	p	module:EXU
pc_exu	vsrc/top.v	/^	wire [31:0] pc_exu;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
pc_module	vsrc/IFU.v	/^	PC pc_module($/;"	i	module:IFU
pc_next	vsrc/PC.v	/^	wire [31:0] pc_next;$/;"	n	module:PC
pc_reg	vsrc/PC.v	/^	Reg #(32, 32'h80000000) pc_reg ($/;"	i	module:PC
pc_reg	vsrc/top.v	/^	Reg #(32, 32'h80000000) pc_reg($/;"	i	module:NPCTRAP.paddr_write.paddr_read.top
pmem	csrc/memory/paddr.c	/^static uint8_t pmem[MEMORY_SIZE] PG_ALIGN = {};$/;"	v	typeref:typename:uint8_t[MEMORY_SIZE]PG_ALIGN	file:
pmem_read	csrc/memory/paddr.c	/^static int32_t pmem_read(int addr, int len) {$/;"	f	typeref:typename:int32_t	file:
pmem_write	csrc/memory/paddr.c	/^static void pmem_write(int addr, int len, int32_t data) {$/;"	f	typeref:typename:void	file:
raddr1	vsrc/RegisterFile.v	/^  input [4:0] raddr1,$/;"	p	module:RegisterFile
raddr2	vsrc/RegisterFile.v	/^  input [4:0] raddr2,$/;"	p	module:RegisterFile
rd	vsrc/EXU.v	/^	input [4:0]  rd,$/;"	p	module:EXU
rd	vsrc/IDU.v	/^	output [4 :0] rd,$/;"	p	module:IDU
rd	vsrc/top.v	/^	wire [4 :0] rd;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
rdata1	vsrc/EXU.v	/^	output [31:0] rdata1,$/;"	p	module:EXU
rdata1	vsrc/RegisterFile.v	/^  output [31:0] rdata1,  $/;"	p	module:RegisterFile
rdata1	vsrc/top.v	/^	wire [31:0] rdata1;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
rdata2	vsrc/EXU.v	/^	output [31:0] rdata2,$/;"	p	module:EXU
rdata2	vsrc/RegisterFile.v	/^  output [31:0] rdata2  $/;"	p	module:RegisterFile
rdata2	vsrc/top.v	/^	wire [31:0] rdata2;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
re	csrc/sdb/expr.c	/^static regex_t re[NR_REGEX] = {};$/;"	v	typeref:typename:regex_t[]	file:
regex	csrc/sdb/expr.c	/^  const char *regex;$/;"	m	struct:rule	typeref:typename:const char *	file:
regfile1	vsrc/EXU.v	/^	RegisterFile regfile1($/;"	i	module:EXU
regs	csrc/sim.cpp	/^const char *regs[] = {$/;"	v	typeref:typename:const char * []
restart_npc	csrc/sim.cpp	/^extern "C" void restart_npc() {$/;"	f	typeref:typename:void
result	vsrc/ALU.v	/^	output [31:0] result$/;"	p	module:ALU
result	vsrc/EXU.v	/^	wire [31:0] result;$/;"	n	module:EXU
return_num	csrc/sdb/expr.c	/^static word_t return_num(int i,bool *success) {$/;"	f	typeref:typename:word_t	file:
rf	vsrc/RegisterFile.v	/^  reg [31:0] rf [0:31];$/;"	r	module:RegisterFile
rl_gets	csrc/sdb/sdb.c	/^static char* rl_gets() {$/;"	f	typeref:typename:char *	file:
rootp	csrc/sim.cpp	/^Vtop___024root* rootp = top->rootp;$/;"	v	typeref:typename:Vtop___024root *
rs1	vsrc/EXU.v	/^	input [4:0]  rs1,$/;"	p	module:EXU
rs1	vsrc/IDU.v	/^	output [4 :0] rs1,$/;"	p	module:IDU
rs1	vsrc/top.v	/^	wire [4 :0] rs1;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
rs2	vsrc/EXU.v	/^	input [4:0]  rs2,$/;"	p	module:EXU
rs2	vsrc/IDU.v	/^	output [4 :0] rs2,$/;"	p	module:IDU
rs2	vsrc/top.v	/^	wire [4 :0] rs2;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
rst	vsrc/EXU.v	/^	input rst,$/;"	p	module:EXU
rst	vsrc/IFU.v	/^	input rst,$/;"	p	module:IFU
rst	vsrc/PC.v	/^	input rst,$/;"	p	module:PC
rst	vsrc/Reg.v	/^  input rst,$/;"	p	module:Reg
rst	vsrc/RegisterFile.v	/^  input rst,$/;"	p	module:RegisterFile
rst	vsrc/top.v	/^	input rst,$/;"	p	module:NPCTRAP.paddr_write.paddr_read.top
rule	csrc/sdb/expr.c	/^static struct rule {$/;"	s	file:
rules	csrc/sdb/expr.c	/^} rules[] = {$/;"	v	typeref:struct:rule[]
run	Makefile	/^run:$/;"	t
s_wen	vsrc/IDU.v	/^	output s_wen,$/;"	p	module:IDU
s_wen	vsrc/MEM.v	/^	input s_wen,$/;"	p	module:MEM
s_wen	vsrc/top.v	/^	wire s_wen;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
sb_1	vsrc/define.v	/^`define  sb_1			 6'b011101$/;"	c
sdb_mainloop	csrc/sdb/sdb.c	/^void sdb_mainloop() {$/;"	f	typeref:typename:void
sdb_set_batch_mode	csrc/sdb/sdb.c	/^void sdb_set_batch_mode() {$/;"	f	typeref:typename:void
set_nemu_state	csrc/utils/state.c	/^void set_nemu_state(int state, vaddr_t pc, int halt_ret) {$/;"	f	typeref:typename:void
sh_1	vsrc/define.v	/^`define  sh_1			 6'b011110$/;"	c
signed_a	vsrc/ALU.v	/^	wire signed [31:0] signed_a = data1;$/;"	n	module:ALU
sim_end	csrc/sim.cpp	/^extern "C" void sim_end() {$/;"	f	typeref:typename:void
sim_init	csrc/sim.cpp	/^extern "C" void sim_init(int argc , char** argv) {$/;"	f	typeref:typename:void
size	vsrc/top.v	/^import "DPI-C" function int  paddr_read(input int addr, input int size);$/;"	p	function:NPCTRAP.paddr_write.paddr_read
size	vsrc/top.v	/^import "DPI-C" function void paddr_write(input int addr, input int data, input int size);$/;"	p	function:NPCTRAP.paddr_write
sll_1	vsrc/define.v	/^`define  sll_1     6'b000011$/;"	c
slli_1	vsrc/define.v	/^`define  slli_1    6'b010001$/;"	c
slt_1	vsrc/define.v	/^`define  slt_1     6'b000100$/;"	c
slt_en	vsrc/ALU.v	/^	wire slt_en;$/;"	n	module:ALU
slt_result	vsrc/ALU.v	/^	wire [31:0] slt_result;$/;"	n	module:ALU
slti_1	vsrc/define.v	/^`define  slti_1    6'b001100$/;"	c
sltiu_1	vsrc/define.v	/^`define  sltiu_1   6'b001101$/;"	c
sltu_1	vsrc/define.v	/^`define  sltu_1    6'b000101$/;"	c
special_type	csrc/sdb/expr.c	/^#define special_type(/;"	d	file:
specialtype	csrc/sdb/expr.c	/^static bool specialtype(int type,int types[],int size) {$/;"	f	typeref:typename:bool	file:
sra_1	vsrc/define.v	/^`define  sra_1     6'b001000$/;"	c
srai_1	vsrc/define.v	/^`define  srai_1    6'b010011$/;"	c
srl_1	vsrc/define.v	/^`define  srl_1     6'b000111$/;"	c
srli_1	vsrc/define.v	/^`define  srli_1    6'b010010$/;"	c
state	csrc/include/utils.h	/^  int state;$/;"	m	struct:__anon008c53990208	typeref:typename:int
statistic	csrc/sim.cpp	/^extern "C" void statistic() {$/;"	f	typeref:typename:void
store	csrc/cpu/cpu.c	/^void store(vaddr_t *addr, int len, word_t data) {$/;"	f	typeref:typename:void
store_data	vsrc/MEM.v	/^	input [31:0] store_data,$/;"	p	module:MEM
str	csrc/include/macro.h	/^#define str(/;"	d
str	csrc/sdb/expr.c	/^  char str[32];$/;"	m	struct:token	typeref:typename:char[32]	file:
str_temp	csrc/include/macro.h	/^#define str_temp(/;"	d
sub_1	vsrc/define.v	/^`define  sub_1     6'b000010$/;"	c
sw_1	vsrc/define.v	/^`define  sw_1			 6'b011111$/;"	c
sword_t	csrc/include/common.h	/^typedef int32_t sword_t;$/;"	t	typeref:typename:int32_t
temp	vsrc/ALU.v	/^	wire [31:0] temp;$/;"	n	module:ALU
temp	vsrc/MEM.v	/^	reg [31:0] temp;$/;"	r	module:MEM
tfp	csrc/sim.cpp	/^VerilatedVcdC * tfp = new VerilatedVcdC ;$/;"	v	typeref:typename:VerilatedVcdC *
token	csrc/sdb/expr.c	/^typedef struct token {$/;"	s	file:
token_type	csrc/sdb/expr.c	/^  int token_type;$/;"	m	struct:rule	typeref:typename:int	file:
tokens	csrc/sdb/expr.c	/^static Token tokens[1024] __attribute__((used)) = {};$/;"	v	typeref:typename:Token[1024]	file:
top	csrc/sim.cpp	/^const std::unique_ptr<Vtop> top{new Vtop{contextp.get(),"TOP"}}; $/;"	v	typeref:typename:const std::unique_ptr<Vtop>
top	vsrc/top.v	/^module top($/;"	m	function:NPCTRAP.paddr_write.paddr_read
trace_end	csrc/sim.cpp	/^static void trace_end(){$/;"	f	typeref:typename:void	file:
type	csrc/sdb/expr.c	/^  int type;$/;"	m	struct:token	typeref:typename:int	file:
type1	csrc/sdb/expr.c	/^static int type1[] = {TK_NEG,TK_DEREF,TK_POS};\/\/-，*,+$/;"	v	typeref:typename:int[]	file:
type2	csrc/sdb/expr.c	/^static int type2[] = {')',TK_NUM,TK_REG};$/;"	v	typeref:typename:int[]	file:
type3	csrc/sdb/expr.c	/^static int type3[] = {'(',')',TK_NUM,TK_REG};$/;"	v	typeref:typename:int[]	file:
unlikely	csrc/include/macro.h	/^#define unlikely(/;"	d
vaddr_ifetch	csrc/memory/paddr.c	/^int32_t vaddr_ifetch(vaddr_t addr, int len) {$/;"	f	typeref:typename:int32_t
vaddr_read	csrc/memory/paddr.c	/^int32_t vaddr_read(vaddr_t addr, int len) {$/;"	f	typeref:typename:int32_t
vaddr_t	csrc/include/common.h	/^typedef word_t vaddr_t;$/;"	t	typeref:typename:word_t
vaddr_write	csrc/memory/paddr.c	/^void vaddr_write(vaddr_t addr, int len, int32_t data) {$/;"	f	typeref:typename:void
val	csrc/include/cpu.h	/^    uint32_t val;$/;"	m	union:__anon163a60f00308::__anon163a60f0040a	typeref:typename:uint32_t
waddr	vsrc/RegisterFile.v	/^  input [4:0] waddr,$/;"	p	module:RegisterFile
watchpoint	csrc/sdb/watchpoint.c	/^typedef struct watchpoint {$/;"	s	file:
wdata	vsrc/RegisterFile.v	/^  input [31:0] wdata,$/;"	p	module:RegisterFile
wen	vsrc/EXU.v	/^	input wen,$/;"	p	module:EXU
wen	vsrc/IDU.v	/^	output wen,$/;"	p	module:IDU
wen	vsrc/PC.v	/^	wire wen;$/;"	n	module:PC
wen	vsrc/Reg.v	/^  input wen$/;"	p	module:Reg
wen	vsrc/RegisterFile.v	/^  input wen,$/;"	p	module:RegisterFile
wen	vsrc/top.v	/^	wire wen;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
wen_reg	vsrc/top.v	/^	wire wen_reg ;$/;"	n	module:NPCTRAP.paddr_write.paddr_read.top
word_t	csrc/include/common.h	/^typedef uint32_t word_t;$/;"	t	typeref:typename:uint32_t
wp_check	csrc/sdb/watchpoint.c	/^void wp_check() {$/;"	f	typeref:typename:void
wp_iterate	csrc/sdb/watchpoint.c	/^void wp_iterate() {$/;"	f	typeref:typename:void
wp_pool	csrc/sdb/watchpoint.c	/^static WP wp_pool[NR_WP] = {};$/;"	v	typeref:typename:WP[]	file:
wp_remove	csrc/sdb/watchpoint.c	/^void wp_remove(int no) {$/;"	f	typeref:typename:void
wp_watch	csrc/sdb/watchpoint.c	/^void wp_watch(char *args,word_t res) {$/;"	f	typeref:typename:void
xor_1	vsrc/define.v	/^`define  xor_1     6'b000110$/;"	c
xori_1	vsrc/define.v	/^`define  xori_1    6'b001110$/;"	c
